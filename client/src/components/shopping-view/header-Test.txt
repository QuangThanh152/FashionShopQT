import { DoorOpen, House, ShoppingCart, SquareMenu, UserRoundCog } from "lucide-react";
import { Link, useNavigate } from "react-router-dom";
import { Button } from "../ui/button";
import { Sheet, SheetTrigger, SheetContent } from "../ui/sheet"; // Đảm bảo import đúng
import { useDispatch, useSelector } from "react-redux";
import { shoppingViewHeaderMenuItems } from "@/config";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from "../ui/dropdown-menu";
import { Avatar, AvatarFallback } from "../ui/avatar";
import Swal from "sweetalert2";
import { logoutUser } from "@/store/auth-slice";
import { toast } from "react-toastify";

function MenuItems() {
    return (
        <nav className="flex flex-col mb-3 lg:mb-0 :lg:item-center lg:flex-row lg:gap-6">
            {
                shoppingViewHeaderMenuItems.map(menuItem => <Link className="text-sm font-medium" key={menuItem.id} to={menuItem.path}>{menuItem.label}</Link>)
            }
        </nav>
    )
}

function HeaderRightContent() {
    const { user } = useSelector(state => state.auth);
    const navigate = useNavigate();
    const dispath = useDispatch();

    function handleLogout() {
        Swal.fire({
            title: "Bạn có chắc chắn muốn đăng xuất?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Đăng xuất",
            cancelButtonText: "Hủy",
        }).then((result) => {
            if (result.isConfirmed) {
                dispath(logoutUser());
                toast.success("Đăng xuất thành công!");
            }
        })
    }

    return <div className="flex flex-col gap-4 lg:items-center lg:flex-row">
        <Button variant="outline" size="icon">
            <ShoppingCart className="w-6 h-6" />
            <span className="sr-only">Gio Hang</span>
        </Button>
        <DropdownMenu>
            <DropdownMenuTrigger asChild>
                <Avatar className="bg-black">
                    <AvatarFallback className="font-extrabold text-white bg-black">
                        {
                            user?.userName?.charAt(0).toUpperCase()
                        }
                    </AvatarFallback>
                </Avatar>
            </DropdownMenuTrigger>

            <DropdownMenuContent side="right" className="w-56">
                <DropdownMenuLabel>
                    Đăng nhập với {user?.userName}
                </DropdownMenuLabel>

                <DropdownMenuSeparator />

                <DropdownMenuItem onClick={() => navigate("/shop/account")}>
                    <UserRoundCog className="w-4 h-4 mr-2" />
                    Tài khoản
                </DropdownMenuItem>

                <DropdownMenuSeparator />

                <DropdownMenuItem onClick={handleLogout}>
                    <DoorOpen className="w-4 h-4 mr-2" />
                    Đăng xuất
                </DropdownMenuItem>

            </DropdownMenuContent>
        </DropdownMenu>
    </div>
}
function ShoppingHeader() {

    const { isAuthenticated } = useSelector(state => state.auth);

    return (
        <header className="sticky top-0 z-40 w-full border-b bg-background">
            <div className="flex items-center justify-between h-16 px-4 md:px-6">
                <Link to="/shop/home" className="flex items-center gap-2">
                    <House className="w-6 h-6" />
                    <span className="font-bold">FashionQTHouse</span>
                </Link>

                <Sheet>
                    <SheetTrigger asChild>
                        <Button variant="outline" size="icon" className="lg:hidden">
                            <SquareMenu className="w-6 h-6" />
                            <span className="sr-only">Toggle header menu</span>
                        </Button>
                    </SheetTrigger>
                    <SheetContent side="left" className="w-full max-w-xs">
                        <MenuItems />
                        <HeaderRightContent />
                    </SheetContent>
                </Sheet>

                <div className="hidden lg:block">
                    <MenuItems />
                </div>

                <div className="hidden lg:block">
                    <HeaderRightContent />
                </div>
            </div>
        </header>
    );
}

export default ShoppingHeader;


////////////////////////////////////////////////////////////
import { DoorOpen, House, ShoppingCart, SquareMenu, UserRoundCog } from "lucide-react";
import { Link, useNavigate } from "react-router-dom";
import { Button } from "../ui/button";
import { 
    Sheet, 
    SheetTrigger, 
    SheetContent, 
    SheetTitle,
    SheetDescription 
} from "../ui/sheet";
import { useDispatch, useSelector } from "react-redux";
import { shoppingViewHeaderMenuItems } from "@/config";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from "../ui/dropdown-menu";
import { Avatar, AvatarFallback } from "../ui/avatar";
import Swal from "sweetalert2";
import { logoutUser } from "@/store/auth-slice";
import { toast } from "react-toastify";
import { useRef } from 'react';

function MenuItems() {
    return (
        <nav className="hidden lg:flex lg:items-center lg:gap-6"> {/* Tăng gap giữa các mục menu */}
            {shoppingViewHeaderMenuItems.map((menuItem) => (
                <Link
                    key={menuItem.id}
                    to={menuItem.path}
                    className="px-2 py-1 text-sm font-medium text-gray-700 transition-colors duration-200 rounded-md shadow-sm hover:text-purple-500 hover:bg-gray-100 hover:shadow-md"
                >
                    {menuItem.label}
                </Link>
            ))}
        </nav>
    );
}

function HeaderRightContent({ handleLogout }) {
    const { user } = useSelector((state) => state.auth);
    const navigate = useNavigate();
    const dispatch = useDispatch();

    return (
        <div className="hidden lg:flex lg:items-center lg:gap-4">
            <Button variant="outline" size="icon" className="transition-colors duration-200 rounded-full shadow-sm hover:bg-gray-100">
                <ShoppingCart className="w-6 h-6 text-gray-800" />
                <span className="sr-only">Giỏ Hàng</span>
            </Button>
            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <Avatar className="bg-black">
                        <AvatarFallback className="font-extrabold text-white bg-black">
                            {user?.userName?.charAt(0).toUpperCase() || 'U'}
                        </AvatarFallback>
                    </Avatar>
                </DropdownMenuTrigger>

                <DropdownMenuContent
                    side="right"
                    className="w-56 p-2 bg-white border border-gray-200 rounded-lg shadow-xl animate-fade-in"
                >
                    <DropdownMenuLabel className="py-2 font-medium text-center text-gray-800">
                        Đăng nhập với {user?.userName}
                    </DropdownMenuLabel>

                    <DropdownMenuSeparator />

                    <DropdownMenuItem
                        onClick={() => {
                            navigate("/shop/account");
                            closeSheet(); // Đóng Sheet khi nhấp vào "Tài khoản" (nếu cần)
                        }}
                        className="flex items-center justify-center p-2 transition-all duration-200 rounded-md shadow-sm hover:bg-gray-100 hover:shadow-md"
                    >
                        <UserRoundCog className="w-4 h-4 mr-2 text-purple-600" />
                        Tài khoản
                    </DropdownMenuItem>

                    <DropdownMenuSeparator />

                    <DropdownMenuItem
                        onClick={() => {
                            handleLogout();
                            closeSheet(); // Đóng Sheet khi nhấp vào "Đăng xuất" (nếu cần)
                        }}
                        className="flex items-center justify-center p-2 transition-all duration-200 rounded-md shadow-sm hover:bg-gray-100 hover:shadow-md"
                    >
                        <DoorOpen className="w-4 h-4 mr-2 text-purple-600" />
                        Đăng xuất
                    </DropdownMenuItem>
                </DropdownMenuContent>
            </DropdownMenu>
        </div>
    );
}

function ShoppingHeader() {
    const { isAuthenticated, user } = useSelector((state) => state.auth);
    const navigate = useNavigate();
    const dispatch = useDispatch();
    const sheetRef = useRef(null);

    const handleLogout = () => {
        Swal.fire({
            title: "Bạn có chắc chắn muốn đăng xuất?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Đăng xuất",
            cancelButtonText: "Hủy",
        }).then((result) => {
            if (result.isConfirmed) {
                dispatch(logoutUser());
                toast.success("Đăng xuất thành công!");
            }
        });
    };

    // Hàm đóng Sheet
    const closeSheet = () => {
        if (sheetRef.current) {
            sheetRef.current.close();
        }
    };

    return (
        <header className="sticky top-0 z-40 w-full bg-white border-b shadow-sm">
            <div className="flex items-center justify-between h-16 px-4 md:px-6">
                <Link to="/shop/home" className="flex items-center gap-4"> {/* Tăng gap giữa icon và text */}
                    <House className="w-6 h-6 text-purple-600" />
                    <span className="font-bold text-gray-900">FashionQTHouse</span>
                </Link>

                <Sheet ref={sheetRef}>
                    <SheetTrigger asChild>
                        <Button
                            variant="outline"
                            size="icon"
                            className="transition-colors duration-200 lg:hidden hover:bg-gray-100"
                        >
                            <SquareMenu className="w-6 h-6 text-gray-800" />
                            <span className="sr-only">Toggle header menu</span>
                        </Button>
                    </SheetTrigger>
                    <SheetContent
                        side="left"
                        className="w-full max-w-xs bg-white border-r border-gray-200 shadow-lg animate-slide-in"
                    >
                        <SheetTitle className="sr-only">Menu Navigation</SheetTitle>
                        <SheetDescription className="sr-only">Navigation menu for mobile devices</SheetDescription>
                        <div className="flex flex-col items-center py-4">
                            <Link to="/shop/home" className="flex items-center gap-2 mb-4">
                                <House className="w-6 h-6 text-purple-600" />
                                <span className="font-bold text-gray-900">FashionQTHouse</span>
                            </Link>
                            <nav className="flex flex-col items-center w-full gap-3">
                                {shoppingViewHeaderMenuItems.map((menuItem) => (
                                    <Link
                                        key={menuItem.id}
                                        to={menuItem.path}
                                        onClick={closeSheet}
                                        className="w-full px-3 py-2 text-sm font-medium text-center text-gray-700 transition-colors duration-200 rounded-md shadow-sm hover:text-purple-500 hover:bg-gray-100 hover:shadow-md"
                                    >
                                        {menuItem.label}
                                    </Link>
                                ))}
                            </nav>
                        </div>
                        <div className="flex flex-col items-center gap-4 mt-6">
                            <Button variant="outline" size="icon" className="transition-colors duration-200 rounded-full shadow-sm hover:bg-gray-100">
                                <ShoppingCart className="w-6 h-6 text-gray-800" />
                                <span className="sr-only">Giỏ Hàng</span>
                            </Button>
                            <DropdownMenu>
                                <DropdownMenuTrigger asChild>
                                    <Avatar className="bg-black">
                                        <AvatarFallback className="font-extrabold text-white bg-black">
                                            {user?.userName?.charAt(0).toUpperCase() || 'U'}
                                        </AvatarFallback>
                                    </Avatar>
                                </DropdownMenuTrigger>

                                <DropdownMenuContent
                                    side="right"
                                    className="w-56 p-2 bg-white border border-gray-200 rounded-lg shadow-xl animate-fade-in"
                                >
                                    <DropdownMenuLabel className="py-2 font-medium text-center text-gray-800">
                                        Đăng nhập với {user?.userName}
                                    </DropdownMenuLabel>

                                    <DropdownMenuSeparator />

                                    <DropdownMenuItem
                                        onClick={() => {
                                            navigate("/shop/account");
                                            closeSheet();
                                        }}
                                        className="flex items-center justify-center p-2 transition-all duration-200 rounded-md shadow-sm hover:bg-gray-100 hover:shadow-md"
                                    >
                                        <UserRoundCog className="w-4 h-4 mr-2 text-purple-600" />
                                        Tài khoản
                                    </DropdownMenuItem>

                                    <DropdownMenuSeparator />

                                    <DropdownMenuItem
                                        onClick={() => {
                                            handleLogout();
                                            closeSheet();
                                        }}
                                        className="flex items-center justify-center p-2 transition-all duration-200 rounded-md shadow-sm hover:bg-gray-100 hover:shadow-md"
                                    >
                                        <DoorOpen className="w-4 h-4 mr-2 text-purple-600" />
                                        Đăng xuất
                                    </DropdownMenuItem>
                                </DropdownMenuContent>
                            </DropdownMenu>
                        </div>
                    </SheetContent>
                </Sheet>

                <div className="hidden lg:flex lg:items-center lg:justify-between lg:w-full">
                   
                    <MenuItems />
                    <HeaderRightContent handleLogout={handleLogout} />
                </div>
            </div>
        </header>
    );
}

export default ShoppingHeader;